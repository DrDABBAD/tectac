{"componentChunkName":"component---src-templates-blog-post-js","path":"/Jetsonnano/dotnetjetsonnano/","result":{"data":{"site":{"siteMetadata":{"title":"Tectac","author":"David Briggs"}},"markdownRemark":{"id":"c8e98358-c694-528b-85e5-a9f4ef80bb1f","excerpt":"Jetson nano and dotnet Jetson is an ARM64 device so any of the  linux Arm64 binaries should work and the build process\nshould be pretty much the same. In factâ€¦","html":"<h2>Jetson nano and dotnet</h2>\n<p>Jetson is an ARM64 device so any of the  linux Arm64 binaries should work and the build process\nshould be pretty much the same. In fact scripts for raspberry pi should work with minimal tweaking.</p>\n<h2>Jetson Nano headless fresh setup (WiFi, SSH and VNC)</h2>\n<h3>Enable desktop Sharing</h3>\n<p> Enabling Desktop Sharing</p>\n<ul>\n<li>Install vino</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"$sudo apt install vino\"><pre class=\"language-$sudo apt install vino\"><code class=\"language-$sudo apt install vino\"></code></pre></div>\n<ul>\n<li>Open the schema in nano editor</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"$sudo nano /usr/share/glib-2.0/schemas/org.gnome.vino.gschema.xml\"><pre class=\"language-$sudo nano /usr/share/glib-2.0/schemas/org.gnome.vino.gschema.xml\"><code class=\"language-$sudo nano /usr/share/glib-2.0/schemas/org.gnome.vino.gschema.xml\"></code></pre></div>\n<ul>\n<li>add the following key into the XML file</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>enabled<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>b<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>summary</span><span class=\"token punctuation\">></span></span>Enable remote access to the desktop<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>summary</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>description</span><span class=\"token punctuation\">></span></span>\n      If true, allows remote access to the desktop via the RFB\n      protocol. Users on remote machines may then connect to the\n      desktop using a VNC viewer.\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>description</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>default</span><span class=\"token punctuation\">></span></span>false<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>default</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>ctrl shift v to paste</p>\n<p>If not installed need the header files provided by -dev packages. So install libglib2.0-dev Install libglib2.0-dev, by clicking that link or by running:</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\">sudo apt-get update &amp;&amp; sudo apt-get install libglib2.0-dev</code></pre></div>\n<p>Then recompile the schema</p>\n<p>sudo glib-compile-schemas /usr/share/glib-2.0/schemas</p>\n<p>This dont work  .....</p>\n<h2>install editor</h2>\n<p>Nano editor is missing needed\nTo install\nFirst, open the terminal and update the apt repositories with the command:</p>\n<div class=\"gatsby-highlight\" data-language=\"linux\"><pre class=\"language-linux\"><code class=\"language-linux\">sudo apt update\nsudo apt install nano</code></pre></div>\n<h2>Install curl</h2>\n<p>sudo apt install curl</p>\n<h2>Purging Libre Office</h2>\n<p>This step is rather optional, but if you want to get some extra space and do not intend to use the Nano as a desktop computer, we suggest some purging.</p>\n<h2>Purge libre office (gain approximately 250 MB extra)</h2>\n<p>sudo apt remove --purge libreoffice* -y\nsudo apt-get clean -y\nsudo apt autoremove -y\nsudo apt-get update</p>\n<h2>Fix graphics</h2>\n<p>May be needed.</p>\n<h2>Docker Config</h2>\n<ul>\n<li>run docker without sudo</li>\n</ul>\n<p>sudo usermod -aG docker your_username</p>\n<ul>\n<li>update Docker</li>\n</ul>\n<p>sudo apt-get --only-upgrade install docker.io</p>\n<h2>Install .NET Core on the Jetson Nano</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. Download the latest (download required version of [ARM64 binaries, tar.gz](https://dotnet.microsoft.com/download/dotnet/) file)\n2. tar extract files to a suitable folder\n2. Add paths to bash profile</code></pre></div>\n<p>This can be achieved with a script ....</p>\n<h2>Verify build of dotnet</h2>\n<p><code class=\"language-text\">dotnet --info</code></p>\n<h3>Build test dotnet application</h3>\n<ul>\n<li>On Jetson</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">dotnet new console -n hello-jetson-nano\ncd hello-jetson-nano/\ndotnet run</code></pre></div>\n<p>Once build You can use</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">dotnet bin/Debug/netcoreapp3.0/hello-jetson-nano.dll</code></pre></div>\n<h3>What about remote build and run i.e build on windows run on Jetson</h3>\n<p>...</p>\n<h2>Issues</h2>\n<p>Ubuntu 18.04 (Jetson Nano) Xrdp Session Ends After Login</p>\n<h2>Resource</h2>\n<p>(<a href=\"https://blog.headforcloud.com/2019/04/03/jetson-nano-a-quick-start-with-.net-core-3/\">https://blog.headforcloud.com/2019/04/03/jetson-nano-a-quick-start-with-.net-core-3/</a>)\n)(<a href=\"https://www.forecr.io/blogs/programming/get-started-with-net-core-on-nvidia-jetson-nano-xavier-nx-modules\">https://www.forecr.io/blogs/programming/get-started-with-net-core-on-nvidia-jetson-nano-xavier-nx-modules</a>)</p>\n<p><a href=\"https://docs.nvidia.com/metropolis/deepstream/dev-guide/index.html#page/DeepStream_Development_Guide\">DeepStream</a></p>\n<p>[Getting Started with NVIDIA Jetson Nano: Object Detection]<a href=\"https://www.youtube.com/watch?v=yZz-4uOx_Js\">https://www.youtube.com/watch?v=yZz-4uOx_Js</a></p>","frontmatter":{"title":"","date":null,"tags":null,"img":null}}},"pageContext":{"slug":"/Jetsonnano/dotnetjetsonnano/","previous":{"fields":{"slug":"/Jetsonnano/Azurenano/"},"frontmatter":{"title":"","tags":null,"img":null}},"next":{"fields":{"slug":"/graphics/svg-edit/"},"frontmatter":{"title":"","tags":null,"img":null}}}},"staticQueryHashes":["2478211480","63159454"]}